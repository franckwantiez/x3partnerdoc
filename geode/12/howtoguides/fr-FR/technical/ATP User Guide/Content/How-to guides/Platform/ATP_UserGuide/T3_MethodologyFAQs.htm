<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_Sage_Skin_TopNav" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-toc-path="[%=System.LinkedTitle%]" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="cache-control" content="no-cache" />
        <meta http-equiv="pragma" content="no-cache" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="558x558" href="../../../../Skins/Favicons/Sage_logo_favicon_558x558.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" /><title>Methodology, recommendations, and limits</title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/Sage_X3.css" rel="stylesheet" type="text/css" />
        <link href="../../../Resources/Stylesheets/font-awesome.css" rel="stylesheet" type="text/css" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link rel="apple-touch-icon" sizes="558x558" href="../../../../Skins/Favicons/Sage_logo_favicon_558x558.png" />
        <link rel="shortcut icon" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../../../Skins/Favicons/favicon-16x16.png" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-accordion vertical menu off-canvas-list" data-accordion-menu="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" role="banner" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="T1_ATP_UserGuide.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <section class="sage-header" id="header-normal">
                                        <div class="row outer-row small-collapse">
                                            <div class="large-6 columns">
                                                <div id="sage-header-title">
                                                    <img id="sage-header-logo" src="../../../Resources/Images/Sage_logo_green.svg" alt="Sage" />
                                                    <div id="sage-header-product-name"><span class="mc-variable Sage-Product.ProductFamily variable">Sage</span>&#160; <span id="sage-header-product"><span class="mc-variable Sage-Product.ProductName variable">X3</span></span></div>
                                                </div>
                                            </div>
                                            <div class="large-6 columns end">
                                                <div id="sage-header-search">
                                                    <form class="search" action="#">
                                                        <div class="search-bar search-bar-container needs-pie _Skins_Sage_Search_Normal_TopNav mc-component">
                                                            <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                            <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                                <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                                </div>
                                                                <div class="search-filter-content" id="sf-content">
                                                                    <ul>
                                                                        <li>
                                                                            <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                            </button>
                                                                        </li>
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                            <div class="search-submit-wrapper" dir="ltr">
                                                                <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                    <section class="sage-header" id="menu-bar-container">
                                        <!-- menu goes here -->
                                    </section>
                                    <section class="sage-topic-body clearfix">
                                        <div class="small-12 medium-4 large-3 columns right">
                                            <div id="page-toc">
                                                <!-- page table of contents generated here -->
                                            </div>
                                            <div class="menu-topic-container" data-mc-conditions="Other.HTML5-TopNav">
                                                <ul class="nocontent menu _Skins_Sage_Menu_Topic_TopNav mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/Web_outputs__ATP_UserGuide.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider=" / " data-mc-breadcrumbs-count="10" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">Menu: </span>
                                            </div>
                                        </div>
                                        <div role="main" id="mc-main-content">
                                            <h1>Methodology, recommendations, and limits</h1>
                                            <p>Before creating and running automated tests, you need to consider the following questions:</p>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Are there are limitations I need to know?</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>You must be using <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> version 2021 R1 (12.0.25) or above. Prior versions are not compatible.</li>
                                                        <li>You cannot check the content for generated files and reports. You can confirm they've been generated.</li>
                                                        <li>Tests are limited to pages and screens within <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> and <span class="mc-variable Sage_X3.X3Warehousing variable">Sage X3 Warehousing</span>. You cannot, for example, interact with an external website like <span class="reference">HMRC.gouv.uk</span> for MTD or other applications such as web scheduling or Sage Enterprise Intelligence (SEI). However, you can test standard functions, customizations, or add-ons as long as they are integrated to <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> or <span class="mc-variable Sage_X3.X3Warehousing variable">Sage X3 Warehousing</span> applications and use the <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> and <span class="mc-variable Sage_X3.X3Warehousing variable">Sage X3 Warehousing</span> standard UI components.</li>
                                                        <li>
                                                            <p>You cannot test web services, test APIs, or pages using APIs such as Mobile Automation.</p>
                                                        </li>
                                                        <li>
                                                            <p>You cannot test requests submitted to the batch server.  (Those operations are asynchronous and would require the Robot to pause the feature file execution during  too much time, until the request submition is completed)</p>
                                                        </li>
                                                        <li><span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> is not designed for performance testing or benchmarks. It is limited to implementing regression tests.</li>
                                                        <li>You cannot execute a test on a production environment. Tests are limited to development or test environments.</li>
                                                        <li>
                                                            <p>The standard <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> and <span class="mc-variable Sage_X3.X3Warehousing variable">Sage X3 Warehousing</span> languages are supported except the Arabic language.</p>
                                                        </li>
                                                        <li>You are limited to checking if a visual process exists, but not its content.</li>
                                                        <li>Step definitions are limited to writing to a text editor field and to checking the content. You cannot write a step definition that interacts with the text formatting buttons.</li>
                                                        <li>Any samples provided in this or other documentation are not designed to be used as-is in your test environment. These samples are based on data in the SEED folder. Samples only run in a SEED folder updated to the latest version with no customizations or modifications to the standard setup. Samples will not work if you make any modifications.</li>
                                                        <li>
                                                            <p>If you want to execute samples on your SEED folder, you need to execute them in the following order:</p>
                                                            <ol>
                                                                <li value="1">
                                                                    <p>Prerequisites</p>
                                                                </li>
                                                                <li value="2">
                                                                    <p>Business flow samples</p>
                                                                </li>
                                                                <li value="3">
                                                                    <p>Samples</p>
                                                                </li>
                                                            </ol>
                                                        </li>
                                                        <li>
                                                            <p>Use a different user setup with its own credentials to test habilitations. Refer to the <a href="https://online-help.sageerpx3.com/erp/12/wp-static-content/public/ATP Step definitions Guide/Content/How-to guides/Platform/ATP_StepDefinitionsGuide/T11_UI component state verification.htm" target="_blank"><span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> step definitions guide</a>  for information about the step definition you can use to test the  state and visibility of fields.</p>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">How should I organize my automated tests? </a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>
                                                            <p>Don’t try to automate everything. Think about the tests you want to implement. What will represent the best coverage and what will add the best value to you.</p>
                                                        </li>
                                                        <li>
                                                            <p>Implement a clear naming convention for your tests. This naming convention should be unique and clear. This makes it easier to update tests created in VS Code and in Allure reports. </p>
                                                            <p><b>For example</b>:</p>
                                                            <p>prefix-type-[legislation]-function/identifier-[sequence]."feature"</p>
                                                            <ul>
                                                                <li>
                                                                    <p>Prefix: such as "fin"for finance, "pur"for purchase, "sal"for sales, etc.</p>
                                                                </li>
                                                                <li>
                                                                    <p>Type: crud, flow, more information below about automated test types</p>
                                                                </li>
                                                                <li>
                                                                    <p>Legislation: code of the legislation linked to the</p>
                                                                </li>
                                                                <li>
                                                                    <p>Function: <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> function code</p>
                                                                </li>
                                                                <li>
                                                                    <p>Identifier: when the function is not relevant, the identifier briefly describes the purpose of the test</p>
                                                                </li>
                                                                <li>
                                                                    <p>Sequence: numbering</p>
                                                                </li>
                                                                <li>
                                                                    <p>The information within square brackets is optional.<br /></p>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Which type of automated tests I should start implementing first?</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>
                                                            <p>Don’t start by implementing complex business flows. </p>
                                                        </li>
                                                        <li>
                                                            <p>Start with small tests that provides high value.</p>
                                                        </li>
                                                        <li>
                                                            <p>Automated tests should be considered as short use cases. </p>
                                                        </li>
                                                        <li>
                                                            <p>Keep in mind that the longer the automated test is, the longer it will take to be executed, and the longer it will take to maintain it.&#160;</p>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Which automated tests should I prioritize?</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>
                                                            <p>Each time you update <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> or Warehousing product, you need to check and manually retest your solution, which can be time consuming. </p>
                                                        </li>
                                                        <li>
                                                            <p>Identify your critical tests (highest value). These are tests that are executed regularly, (e.g., once a week, once a month, your current processes, etc.) contrary to those executed very rarely, (e.g., once a year).</p>
                                                        </li>
                                                        <li>
                                                            <p>Ensure they are clearly marked to distinguish them from your lower priority tests.</p>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Can I automate all my manual tests? </a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>
                                                            <p style="font-weight: bold;">Regression testing definition (source ISTQB)</p>
                                                            <ul>
                                                                <li>
                                                                    <p>Testing a previously tested program following a modification to ensure that defects have not been introduced or uncovered in unchanged areas of the software as a result of the changes made.</p>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                        <li>
                                                            <p><b>Regression tests</b>
                                                            </p>
                                                            <ul>
                                                                <li>
                                                                    <p>Automated tests  are aimed at describing controls or a list of actions executed in <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span>. The automated test describes an expected behavior and outcome. When the automated test is executed, it is controlled that the tests get the same results and outcomes as those described in the automated test (feature file).</p>
                                                                </li>
                                                                <li>
                                                                    <p>If all the actions or controls pass without any errors, the automated test passes with success.</p>
                                                                </li>
                                                                <li>
                                                                    <p>If at least one action or a control fails, the automated test fails.</p>
                                                                    <ul>
                                                                        <li>
                                                                            <p>It can be the result of an incorrect test definition. This will require reviewing and updating the automated test.</p>
                                                                        </li>
                                                                        <li>
                                                                            <p>Or if the test used to work:</p>
                                                                            <ul>
                                                                                <li>
                                                                                    <p>It can be a potential regression detected by the automated test.</p>
                                                                                </li>
                                                                                <li>
                                                                                    <p>It can be a change of behavior within <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> implied by a standard modification or a customization. This will require reviewing and updating the automated test. Examples of potential changes that can have an impact of the automated test:</p>
                                                                                    <ul>
                                                                                        <li>
                                                                                            <p>Updated translation</p>
                                                                                        </li>
                                                                                        <li>
                                                                                            <p>Change of functional behavior (new message displayed, change of process, etc.)</p>
                                                                                        </li>
                                                                                    </ul>
                                                                                </li>
                                                                            </ul>
                                                                        </li>
                                                                    </ul>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Which environment should I use to run my automated test?</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <ul>
                                                        <li>
                                                            <p>As described in <a href="T4_GetStarted.htm#Setting">Setting up <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> endpoints</a>, tests can be run on a development or test endpoint, but not your production endpoint.</p>
                                                        </li>
                                                        <li>
                                                            <p>If means you need to have dedicated test environments to execute your automated tests. However, it is important to keep in mind the following points:</p>
                                                            <ul>
                                                                <li>
                                                                    <p>Your automated tests need to use specific data (reference automation tests data) that should be used only by those automated tests. The risk otherwise is to use data that has been modified and which will alter the successful execution of your automated tests.</p>
                                                                    <ul>
                                                                        <li>
                                                                            <p>Each time your automated tests are executed, the data base context changes. To make sure your automated tests can be executed again, you might need to refresh the folder where the automated tests have been executed.</p>
                                                                        </li>
                                                                        <li>
                                                                            <p>Your automation execution test folder cannot be refreshed with the production folder because the data of the production folder continuously changes. </p>
                                                                        </li>
                                                                        <li>
                                                                            <p>It needs to be refreshed with a reference automation test folder where you create the necessary data, documents and setup for your automated to be executed.</p>
                                                                        </li>
                                                                    </ul>
                                                                </li>
                                                                <li>
                                                                    <p>It is important to separate the manual test and the automation execution folders. The risk otherwise is to have manual tests changing the data and altering the successful execution of the automated tests.</p>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                    <div class="highlightBox">
                                                        <p><b>Recommendation</b>
                                                        </p>
                                                        <p>Your test environments could have the following architecture:</p>
                                                        <ul>
                                                            <li>
                                                                <p>The Automation reference data (setup, documents, common data) are created in the X3ATPREF folder.</p>
                                                            </li>
                                                            <li>
                                                                <p>Once your specific developments have been validated, they are installed on the different test folders.</p>
                                                            </li>
                                                            <li>
                                                                <p>Standard patches are also installed on the different folders of the test environment</p>
                                                            </li>
                                                            <li>
                                                                <p>The folder X3ATPRUN (used to execute the automated tests) is refreshed on demand, using a copy of the Reference automation folder (X3ATPREF).</p>
                                                            </li>
                                                            <li>
                                                                <p>The folder X3QAMAN is used for manual tests only.</p>
                                                            </li>
                                                        </ul>
                                                        <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1221" data-mc-height="488" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            <h2>Recommendations</h2>
                                            <p>The <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span>is based on the Cucumber open source component that supports behavior-driven development&#160;(BDD). Cucumber allows you to write and execute automated regression tests in a user-oriented language called "Gherkin."<br /></p>
                                            <h2>Gherkin language introduction</h2>
                                            <p>Gherkin language is a business-readable, domain-specific language that allows you to describe the software’s behavior with an end-user approach. Each action or step in the automated test exactly represents actions a <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> user would perform.<br /></p>
                                            <h3>Gherkin reserved keywords</h3>
                                            <p><b>Gherkin primary keywords</b>
                                            </p>
                                            <p><b>Feature</b>: A keyword is used to define the feature name. To ensure consistency, it is recommended to name the feature with the same code as the feature file. An automated test always starts with the feature keyword. A feature can be composed of one or several scenarios.&#160;</p>
                                            <p><b>Scenario</b>: A keyword is used to define the scenario name. A scenario is a test case aimed at describing a succession of user actions performed by the automated test. A scenario is composed of steps describing the different actions performed by the automated test.<br /><br /><b>Scenario outline</b>: A keyword is used to define a type of scenario that allows it to be executed several times using a different combination of values for each execution.<br /><br /><b>Example</b>: A keyword is used to define the different combination of parameters and values used by the scenario outline.</p>
                                            <p>A step can be an action or a verification performed by the automated test. Each step begins with one of the following keywords:</p>
                                            <p><span class="reference">Given</span>: describes the initial context of a step</p>
                                            <p><span class="reference">When</span> : describes an event or an action in a step</p>
                                            <p><span class="reference">Then</span>: describes an expected outcome or result of a step</p>
                                            <p><span class="reference">And</span>: used with other steps, (e.g., <span class="reference">Given</span>, <span class="reference">Then</span>, etc...) to include something</p>
                                            <p><span class="reference">But</span>:  used with other steps, ( e.g., <span class="reference">Given</span>, <span class="reference">Then</span>, etc...) to exclude something</p>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Gherkin syntax example</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <p>The context in this example is accessing the "Company" field functionality.</p>
                                                    <ol>
                                                        <li value="1">
                                                            <p>After the functionality is accessed, the first outcome is verified: The value of the "Company" text field company is empty when no value is defined.&#160;</p>
                                                        </li>
                                                        <li value="2">
                                                            <p>Then the second outcome is verified: The text field contains the value "ATP3" when the value "ATP3" is entered.<br /></p>
                                                        </li>
                                                    </ol>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_1.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="467" data-mc-height="153" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_1_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </div>
                                            </div>
                                            <p><b>" " "</b>: (Doc Strings) used to encapsulate the value</p>
                                            <p><span class="reference">|</span> : (Data Tables) used for scenario outlines to define different combinations of values and the parameters they are related to</p>
                                            <p><b>@ Tags</b>: defined before the feature keyword to categorized them. When a Jenkins pipeline is executed, it is possible to execute all the features related to the same <b>Category</b> (feature defined with the same tag)</p>
                                            <p><b>#Comments</b>: not executed.</p>
                                            <h2>Automated test example</h2>
                                            <p>An automated test starts with the feature definition and then adding one or multiple scenarios. The following automated test is composed of three scenarios:</p>
                                            <ul>
                                                <li>
                                                    <p>A scenario to log in</p>
                                                </li>
                                                <li>
                                                    <p>A scenario to open a specific function</p>
                                                </li>
                                                <li>
                                                    <p> A scenario to log out of <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span></p>
                                                </li>
                                            </ul>
                                            <p>Each scenario is composed of steps describing the different actions to be performed by the automated test.</p>
                                            <p>When the automated test is executed, the actions are executed in the following order:</p>
                                            <ol start="1">
                                                <li value="1">
                                                    <p>To log in into <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> using a login, password and connection type parameters. </p>
                                                </li>
                                                <li value="2">
                                                    <p>To select the proper endpoint and to check that the endpoint has been selected.</p>
                                                </li>
                                                <li value="3">
                                                    <p>To open the opens the company functionality and to verify the company functional is opened. Then to close the company function.</p>
                                                </li>
                                                <li value="4">
                                                    <p>To log out of <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span>.</p>
                                                </li>
                                            </ol>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_2.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="982" data-mc-height="404" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_2_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <h3>Example of a scenario outline</h3>
                                            <p>The following scenario is for a "scenario outline," which is a type of scenario used for running the same test multiple times with different datasets for each iteration. </p>
                                            <p>The values defined between the delimited characters <b>"&lt;&gt;"</b> are the parameters.</p>
                                            <p>Under the <span class="reference">Examples</span> tag, a data table delimited by pipe characters <span class="reference">|</span> declares the parameters and their corresponding values. </p>
                                            <p>In this example, the scenario outline will be executed twice: <br />The first time to create a sales order for customer NA008 and the product BMS012, and the second time using a different customer, product and price according to the data in the parameter values in the data table.</p>
                                            <p> <a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_3.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="640" data-mc-height="874" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_3_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a></p>
                                            <div class="highlightBox">
                                                <p><b>Recommendations</b>
                                                </p>
                                                <p>The <span class="reference">Examples</span> section corresponds to the last section of the scenario outline. All the step definitions for the scenario outline should be written before this section. After the <span class="reference">Examples</span> section, a new scenario or scenario outline should be started, or the test should end.</p>
                                                <div class="note-tip">When you enter the <span class="reference">Examples</span> section, just save your script (press <span class="reference">CTRL+S</span>)  for the parameters to be indented properly.</div>
                                                <p>When you write scenario outlines, it is recommended that the step definitions to open and close the function should be set outside of scenario outline. If you keep the step definitions to open and close the function inside of the scenario outline, they are executed at each iteration of the scenario outline. </p>
                                                <div class="note-tip">Think like the user! When a user wants to create a document, he opens the function once, creates the necessary documents and then closes the function when he is done. To reproduce this behavior without executing the function opening and closing at each iteration please check the following example:</div>
                                            </div>
                                            <h3>Scenario and scenario outline examples</h3>
                                            <p>The first scenario consists of opening the required function or entity.</p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_4.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="708" data-mc-height="272" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_4_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <p>The second scenario is a scenario outline. This scenario consists of creating the necessary data with different values for each iteration.</p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_5.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="721" data-mc-height="920" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_5_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <p>The third scenario consists of closing the required function that was opened.</p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_6.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="737" data-mc-height="170" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_6_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <h2>Writing automated tests</h2>
                                            <p><b>How to fine the <span class="code">x3name</span> for a field</b>
                                            </p>
                                            <p>When you write automated test with <span class="mc-variable Sage_X3.X3ATP variable">(Undefined variable: Sage_X3.X3ATP)</span>, you can select the graphical components either by the field name (field description) or by the <span class="code">x3name</span> (X3 field code) in the HTML code.</p>
                                            <p>Let’s take the example of the companies’ functionality.</p>
                                            <p>The company text field can be selected by its field description.</p>
                                            <p class="indent"><span style="color: #5757ff;">And</span>&#160;the&#160;user&#160;selects&#160;the&#160;text&#160;field&#160;with&#160;name:&#160;<span style="color: #a31515;">"Company"</span></p>
                                            <p>However, the long description doesn’t have  field description, so you need to identify it by selecting X3 field name.</p>
                                            <p class="indent"><span style="color: #5757ff;">And</span>&#160;the&#160;user&#160;selects&#160;the&#160;text&#160;field&#160;with&#160;the x3name:&#160;<span style="color: #a31515;">"CPY0_CPYNAM"</span></p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_7.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="679" data-mc-height="184" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_7_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <p><b>How to find the <span class="code">x3name</span> for a text field</b>
                                            </p>
                                            <ol start="1">
                                                <li value="1">
                                                    <p>Using the screenshot above as a model, place your cursor over the UI graphical element (text field) containing the value <span class="reference">NAProcess</span>. </p>
                                                </li>
                                                <li value="2">
                                                    <p>Right-click and select <span class="reference">Inspect</span>.</p>
                                                </li>
                                            </ol>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_8.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1338" data-mc-height="503" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_8_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <p>The HTML code for the page displays. The <span class="code">x3name</span> for the text field is in the <span class="code">data-s-field-x3name</span> tag.</p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_9.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1510" data-mc-height="128" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_9_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <p><b>How to find the <span class="code">x3name</span> for a data table</b>
                                            </p>
                                            <ol start="1">
                                                <li value="1">
                                                    <p>Click the left top corner of the data table, right-click and select <span class="reference">Inspect</span>. </p>
                                                </li>
                                            </ol>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_10.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1521" data-mc-height="318" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_10_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ol data-mc-continue="true">
                                                <li value="2">
                                                    <p>In the HTML code for the data table is in the <span class="code">data-s-field-x3name</span>.</p>
                                                </li>
                                            </ol>
                                            <p>This data <span class="code">x3name</span> value contains the keyword ARRAY.</p>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_11.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1327" data-mc-height="153" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_11_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <div class="highlightBox">
                                                <p><b>Recommendations</b>
                                                </p>
                                                <p>Should you use the <span class="code">x3name</span> or the field description in the UI? There are pros and cons for each solution.</p>
                                                <p>When an automated test is written using the field description, it is easier to write the automated test and to maintain it. The readability of the test is more user-friendly.  However, you need to review and potentially update the automated test each time the field translation changes.</p>
                                                <p>On the other hand, the <span class="code">x3name</span> is not impacted by updated UI translations. Keep in mind that it is not always possible to select the graphical components by their <span class="code">x3name</span>, (e.g,. left list, right list, screen title, messages). Also, it takes more time to write the automated test because you need to search for the <span class="code">x3name</span> for each field. If you write automated test using the <span class="code">x3name</span>, the  translation change won’t be detected by the <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span>.</p>
                                            </div>
                                            <h3>Types of automated tests</h3>
                                            <p>Remember when you write automated tests:</p>
                                            <ul>
                                                <li>
                                                    <p>CRUD: You use this type to test simple object Create, Read, Update, Delete actions</p>
                                                </li>
                                                <li>
                                                    <p>FLOW: You can create more complex tests for generating a business flow such as creating a sales order, creating a delivery by selecting the sales order, generating a sales invoice by selecting the delivery, etc… You can also validate the different controls developed for a specific functionality.<br /></p>
                                                </li>
                                            </ul>
                                            <div class="highlightBox">
                                                <div>
                                                    <p><b>Recommendations and principles</b>
                                                    </p>
                                                    <p>Complex automated tests have a very high risk factor regarding time to maintain them.<br /></p>
                                                    <p>The automated tests should be short: to keep the execution time acceptable and easy to maintain.  Don’t try to test everything in a single automated test. The automated should be split into smaller use cases independent from one other.</p>
                                                    <p>The automated tests should be independent. If you want to avoid conflicts when the automated tests are executed, they should use their own data.</p>
                                                    <p>When multiple people are running automated tests, each person should use their own dataset. Create your own data (your own company, customer, etc...).</p>
                                                    <p>Do not modify someone else's data. You risk causing their automated tests to fail.</p>
                                                </div>
                                            </div>
                                            <h3>Using stored values</h3>
                                            <p>In certain situations, <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> generates documents and data with automatically and dynamically created reference numbers.</p>
                                            <ul>
                                                <li>
                                                    <p>Because the sequence number is generated dynamically, it is not possible for the <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> to predict which value will be assigned to the new document created.</p>
                                                </li>
                                                <li>
                                                    <p>It is important to create your automated tests to be generic, so they can be executed several times without having to modify the test each time you need to execute it again.</p>
                                                </li>
                                            </ul>
                                            <p>The <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> makes it possible to store the value of a given text field or a given data table cell into a stored value that can be reused later in your test. </p>
                                            <ul>
                                                <li>
                                                    <p>A stored value is only usable in the feature file in which it has been created.</p>
                                                </li>
                                                <li>
                                                    <p>It means the stored value can only be used inside the current feature file and can’t be passed to another feature file. The  stored value saved in memory is deleted once the test execution is completed successfully or not.</p>
                                                </li>
                                            </ul>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Example: Automated flow test using stored values</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <p>This is a business flow sample: 0202B-PurchasesStandardFlow</p>
                                                    <p>This flow creates a purchase order, then creates a receipt by selecting the purchase order previously created. </p>
                                                    <p>Because the purchase order reference changes every time a new order is created, how can you make the test dynamic?&#160;</p>
                                                    <p>This requires using stored values. </p>
                                                    <p>To make this automated test fully dynamic, as soon as the purchase order document is created, the value of the purchase order reference dynamically generated is saved in a stored value.</p>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_12.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="755" data-mc-height="149" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_12_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                    <p>Later, this stored value is reused during the receipt creation so that the created purchase order can be selected.</p>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_13.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1163" data-mc-height="178" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_13_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="highlightBox">
                                                <p><b>Recommendation</b>
                                                </p>
                                                <div>
                                                    <p>When you create a stored value, use a naming convention that makes easy to search from  in your tests or in VS code. In this sample, the stored values are prefixed with <span class="reference">ENV_</span> so they can be easily found in all the tests.</p>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_14.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="469" data-mc-height="524" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_14_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </div>
                                            </div>
                                            <p>Since <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> version 2.3.0, the stored values capability has been enhanced. You can use stored values directly to write or verify dynamic values in:</p>
                                            <ul>
                                                <li>
                                                    <p> Text fields</p>
                                                </li>
                                                <li>
                                                    <p> Text editor fields</p>
                                                </li>
                                                <li>
                                                    <p>Text area fields</p>
                                                </li>
                                                <li>
                                                    <p>Password fields</p>
                                                </li>
                                                <li>
                                                    <p>Data table cells</p>
                                                </li>
                                            </ul>
                                            <p>In these cases, stored values need to be between square brackets.</p>
                                            <p>In addition to the new stored values management, a new step definition has also been implemented. It allows you to generate a dynamic sequence and store the result into a stored value.</p>
                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Example: Automated flow test using stored values</a></span>
                                                <div class="MCDropDownBody dropDownBody">
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 Automated flow test using stored values.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1006" data-mc-height="236" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 Automated flow test using stored values_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </div>
                                            </div>
                                            <p>For more information on how to use stored values, consult the <a href="https://online-help.sageerpx3.com/erp/12/wp-static-content/public/ATP Step definitions Guide/Default.htm" target="_blank">Sage X3 Automated Test Platform - Step definitions guide</a>.</p>
                                            <h3><a name="Using"></a>Using user stored values</h3>
                                            <div class="note-warning">You cannot create new static parameters in <span class="reference">parameters</span> or <span class="reference">parameters-cloud-chrome</span> files.</div>
                                            <p>Thanks to the user stored values functionality available with <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> version 2.4.0, you can create your own set of parameters with their respective values.</p>
                                            <p>Contrary to stored values which are instantiated during the executing of your test, user stored values are specific parameters defined with their respecting values in a <span class="reference">user-stored-values</span> file which is loaded   in memory before each test is executed.</p>
                                            <p>To use the <span class="reference">user stored values</span> capability:</p>
                                            <ul>
                                                <li>
                                                    <p>The <span class="reference">userStoredValuesFile</span> parameter can be defined in the <span class="reference">parameters</span> or <span class="reference">parameter-cloud-chrome</span> files.</p>
                                                    <ul>
                                                        <li>
                                                            <p>This parameter contains the path of the specific<span class="reference"> user-stored-values</span> file that contains the user parameters and their respective values.</p>
                                                        </li>
                                                        <li>
                                                            <p>This parameter is optional.</p>
                                                            <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Example: <span class="reference">parameters</span> file</a></span>
                                                                <div class="MCDropDownBody dropDownBody">
                                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 1.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="594" data-mc-height="350" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 1_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </li>
                                                        <li>
                                                            <p>At the beginning of the execution, if the <span class="reference">userStoredValuesFile</span> parameter contains an incorrect path, no feature will be executed. The execution will directly stop with the following error message:</p>
                                                            <p><span class="reference">parameter userStoredValuesFile: cucumber-user-config/user/&lt;FileName&gt; file not found</span>
                                                            </p>
                                                        </li>
                                                        <li>
                                                            <p>If the parameter is not defined or left blank, no <span class="reference">user-stored-values</span> file is loaded.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                                <li>
                                                    <p>The <span class="reference">user-stored-values</span> file is located in the <span class="reference">cucumber-user-config</span> folder.</p>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 2.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="267" data-mc-height="144" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 2_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </li>
                                                <li>
                                                    <p>Like for static parameters defined in the <span class="reference">parameters</span> or <span class="reference">parameters-cloud-chrome</span> files, the <span class="reference">user-stored-values</span> file contains the list of parameters with their respective values.</p>
                                                    <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 3.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="390" data-mc-height="131" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 3_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                    </p>
                                                </li>
                                                <li>
                                                    <p>As for the stored values, you can use the user stored values to write and verify dynamic values in text fields, text area fields, text editor fields, password fields, or data table cells by encapsulating them between square brackets.</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_" aria-expanded="false">Example: Automated flow test using user stored values</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 4.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="709" data-mc-height="439" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 4_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div class="highlightBox"> <b>Recommendation</b><br />When you create a user stored value, use a naming convention that makes it easy to search from in your tests or in VS code. In this sample, the user stored values are prefixed with <span class="reference">USV_</span> so they can easily be found in all the tests and the <span class="reference">user-stored-values</span> file.<br /><p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 5.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="429" data-mc-height="557" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T8 User stored values 5_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a></p></div>
                                                </li>
                                                <li>
                                                    <p>It is possible to manage several <span class="reference">user-stored-values</span> files   and to name them with your own naming convention. However, it is only possible to load one <span class="reference">user-stored-values</span> file per execution.</p>
                                                </li>
                                                <li>
                                                    <p>The user stored values are instantiated prior to each feature (test) execution and are active for each feature executed.  The user stored value is deleted once the feature execution is completed.</p>
                                                    <ul>
                                                        <li>
                                                            <p>If you modify its value during the feature execution, this will impact only the current feature executed and not the other feature that can use the same user stored value.</p>
                                                        </li>
                                                        <li>
                                                            <p>Like for stored values, it is not possible to move a user stored value from one feature to another.  The user stored value is active during the entire feature execution and across all the scenarios of the current test executed.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <h3><a name="ExeTestPara"></a>Executing tests in parallel</h3>
                                            <p>Sage X3 Automated Test Platform version 3.0.0 allows to run automated tests in parallel.</p>
                                            <ul>
                                                <li>
                                                    <p>The maximum number of executors depends on your configuration and can’t exceed the MAXATP value defined in your <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span>.</p>
                                                    <ul>
                                                        <li>
                                                            <p>This information can be found in Sage X3 / Warehousing in the following functionality Administration &gt; Administration &gt; Licenses &gt; Licenses data</p>
                                                        </li>
                                                        <li>
                                                            <p>Click your license to display the license information.</p>
                                                        </li>
                                                        <li>
                                                            <p>Scroll to the parameters section and look for the parameter <strong>Number of ATP users parameters (MAXATP)</strong></p>
                                                        </li>
                                                        <li>
                                                            <p>Default Sage X3 Automated Test License are sold with 5 users.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <ul>
                                                <li>
                                                    <p>Refer to <a href="https://online-help.sageerpx3.com/erp/12/wp-static-content/public/ATP User Guide/Content/How-to guides/Platform/ATP_UserGuide/T6_ExecuteTest.htm#link2" alt="Link to the Execute Test page" title="Link to the Execute Test page">Running simultaneous tests in VS Code</a></p>
                                                    <ul>
                                                        <li>
                                                            <p>Setup MAX_INSTANCES parameters</p>
                                                            <ul>
                                                                <li>
                                                                    <p>It recommended not to set  MAX_INSTANCES with a value greater than MAXATP -1 and depending on the number of concurrent access your <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> web server can support.</p>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                        <li>
                                                            <p>Setup timeoutLocks parameters.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <h4>Why run tests in parallel</h4>
                                            <p>Running tests in parallel, allows to decrease the time of tests executions.  It also Allows to test concurrent executions of functionalities.</p>
                                            <ul>
                                                <li>
                                                    <p>However, by running tests in parallel, tests can conflict with each other provoking lock in <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span>.</p>
                                                </li>
                                                <li>
                                                    <p>With Sage X3 Automated Test Platform 3.0.0 new step definitions have been included to prevent locks from happening in <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> when the tests are executed in parallel.</p>
                                                </li>
                                            </ul>
                                            <p><code>the user adds the lock entry <span style="color: #b22222;">"(.*)"</span></code>
                                            </p>
                                            <p><code>the user removes the lock entry <span style="color: #b22222;">"(.*)"</span></code>
                                            </p>
                                            <h4>How to write tests to avoid locks in your <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span><span class="mc-variable Sage-Product.ProductName variable">X3</span></h4>
                                            <p>Let’s take the example of the following sample features which try to modify the same document.</p>
                                            <p>
                                                <img src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_1.png" />
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>In this example, two tests are trying to interact in the same function with the same record.</p>
                                                    <ul>
                                                        <li>
                                                            <p>Note the tests should be independent of each other and not use the same document.  However, this example has been done on purpose to explain how to avoid the tests to conflicts with each other.</p>
                                                        </li>
                                                        <li>
                                                            <p>The first thing to consider will be to make sure the tests are data independent: meaning the tests should use different data.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <ul>
                                                <li>
                                                    <p>However, even doing so, it can happen in certain cases that one test locks very briefly a record and so the other test that need to interact with this record will fail.</p>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_2.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1554" data-mc-height="722" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_2_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-height: auto;mc-thumbnail-max-width: 150px;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>To avoid this colliding issue, it is necessary to add additional step definitions to prevent the tests from conflicting with each other.</p>
                                                    <ul>
                                                        <li>
                                                            <p>In the following example, the lock occurs on the GESBIC function. So, it is necessary to make sure the lock is activated before entering the function and remove it once all the interactions in this function is completed.</p>
                                                        </li>
                                                        <li>
                                                            <p>The same lock code is added and removed on both tests. (e.g. LCK_GESBIC) in a dedicated scenario.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_3.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1205" data-mc-height="629" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_3_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>In addition to the lock scenario, you can also add a tag on your test using the same naming convention as the one you use for the lock code.</p>
                                                    <p>This will allow you to execute again in parallel all the tests that are defined with the same tag (e.g. @LCK_GESBIC).</p>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_4.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="329" data-mc-height="46" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_4_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>Let's verify the execution of the two tests in parallel.</p>
                                                    <ul>
                                                        <li>
                                                            <p>Refer to: <a href="https://online-help.sageerpx3.com/erp/12/wp-static-content/public/ATP User Guide/Content/How-to guides/Platform/ATP_UserGuide/T6_ExecuteTest.htm#link2" alt="Link to the Execute Test page" title="Link to the Execute Test page">Running simultaneous tests in VS Code</a></p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_5.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="412" data-mc-height="52" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_5_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail: popup;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>Now, because of the lock mechanism is activated for those two tests and because they are sharing the same lock code, the second test has waited for the first one to remove the lock before continuing with the execution. Both tests passed without conflicting anymore with each other.</p>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_6.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1403" data-mc-height="359" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_6_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <h4>Recommendation to write test for parallel execution.</h4>
                                            <ul>
                                                <li>
                                                    <p>Executing tests in parallel can be difficult to manage. This should be done in a secondary step when your tests are already working well with a single instance.</p>
                                                </li>
                                            </ul>
                                            <ul>
                                                <li>
                                                    <p>All tests conflicting with each other’s, should share the same lock identifier.</p>
                                                    <ul>
                                                        <li>
                                                            <p>The lock code given should be a unique identifier that is easy to look for.</p>
                                                        </li>
                                                        <li>
                                                            <p>For instance, in the example above all the lock codes starts with the prefix “LCK_” which makes it easy to find them using visual studio code.</p>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_7.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="494" data-mc-height="655" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_7_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>In the easiest case, adding a lock will consist in preventing several functions from being opened at the same time. Generally, you will create a specific scenario using the lock step definitions prior / after the business scenario that opens the specific business function. It is recommended to add the lock code to the scenario description, so you can quickly identify it in your test or in allure report.</p>
                                                </li>
                                            </ul>
                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_8.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1366" data-mc-height="253" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_8_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail: popup;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                            </p>
                                            <ul>
                                                <li>
                                                    <p>It is not prohibited to add / remove a lock into a business scenario (for instance in the GESBIC modification scenario),</p>
                                                    <ul>
                                                        <li>
                                                            <p>However,  it can make the maintenance more difficult.</p>
                                                        </li>
                                                        <li>
                                                            <p>But for performance reasons, it can be interested to remove the lock before closing the function, especially if the current business scenario takes too much time.</p>
                                                        </li>
                                                        <li>
                                                            <p>Locking a scenario for too long will increase the tests execution time.</p>
                                                        </li>
                                                        <li>
                                                            <p>The maximum time the Robot is waiting for the lock to be removed corresponds to the value defined in the parameters timeoutLocks.</p>
                                                            <div class="note-warning">When you add a lock in memory, don't forget to remove the lock from memory, otherwise the lock will be removed only once the tests execution is completed. For performance reason, and to avoid increasing the duration of the test executions, the lock should be removed when it is not anymore necessary in the test.</div>
                                                        </li>
                                                    </ul>
                                                </li>
                                                <li>
                                                    <p>When you execute a test that pass with a single instance and fails when running multiple instances, it means you may have tests conflicting with each other’s.</p>
                                                    <ul>
                                                        <li>
                                                            <p>use allure report timeline to identify, which tests were executing in parallel.</p>
                                                            <ul>
                                                                <li>
                                                                    <p>For instance with MAX_INSTANCE =4 , 4 tests executed in parallel.</p>
                                                                </li>
                                                            </ul>
                                                            <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_9.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="1345" data-mc-height="434" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T3 How to write tests_9_thumb_150_0.png" style="mc-thumbnail: popup;mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                            </p>
                                                        </li>
                                                        <li>
                                                            <p>Try to run those tests in parallel from vscode to identify from where the problem comes from.</p>
                                                            <ul>
                                                                <li>
                                                                    <p>Refer to <a href="https://online-help.sageerpx3.com/erp/12/wp-static-content/public/ATP User Guide/Content/How-to guides/Platform/ATP_UserGuide/T6_ExecuteTest.htm#link2" alt="Link to the Execute Test page" title="Link to the Execute Test page">Running simultaneous tests in VS Code</a></p>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                            <h3>Logging out of <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> </h3>
                                            <div>
                                                <p>To close the X3 session properly, you need to add a log out scenario using the log out step definition.</p>
                                                <p><a class="MCPopupThumbnailLink MCPopupThumbnailPopup" href="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_15.png"><img class="MCPopupThumbnail img imgthumbnail" data-mc-width="454" data-mc-height="83" src="../../../Resources/Images/ATP-UserGuide-2.2.0-MadCap/T5 Methodology and recommendations_15_thumb_150_0.png" style="mc-thumbnail-max-width: 150px;mc-thumbnail-max-height: auto;" tabindex="" /></a>
                                                </p>
                                                <p>When the automated tests are executed without any error and a log out is done, the <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> session opened by <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> is closed immediately after the test ends.</p>
                                                <p>If the test fails or ends without any error and any log out, the <span class="mc-variable Sage_X3.SageX3 variable">Sage X3</span> session opened by <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> is closed after few minutes.</p>
                                            </div>
                                            <h2>Version compatibility</h2>
                                            <div>
                                                <p><span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> versions are delivered with the same release cadence as <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span>.</p>
                                                <p>For that reason, it is recommended to use a <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span> version compliant with the version of <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> you are using. </p>
                                                <p>If you update <span class="mc-variable Sage_X3.Sage_X3_Automated_Test_Platform variable">Sage X3 Automated Test Platform</span>, it is highly recommended to update <span class="mc-variable Sage-Product.ProductFamily variable">Sage</span> <span class="mc-variable Sage-Product.ProductName variable">X3</span> at the same time to ensure their compatibility.</p>
                                            </div>
                                        </div>
                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_Toolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic;position: relative;left: 45%; width: 200px; overflow: auto;">
                                            <div class="button-group-container-left">
                                                <button class="button needs-pie previous-topic-button" title="Previous" disabled="true">
                                                    <div>
                                                        <div role="img" class="button-icon-wrapper" aria-label="Previous">
                                                            <div class="button-icon"> </div>
                                                        </div><span class="button-text">Previous</span>
                                                    </div>
                                                </button>
                                            </div>
                                        </div>
                                    </section><a class="go-to-top" href="#"><!-- icon and label are inserted --></a>
                                    <section class="sage-footer colour-dark-1" id="footer" role="contentinfo">
                                        <div class="row">
                                            <div class="small-6 medium-3 columns">
                                                <h5>Sage links</h5>
                                                <p><a href="https://www.sage.com/en-us/support/" target="_blank" class="external">Sage Support Hub</a>
                                                </p>
                                                <p><a href="https://www.sagecity.com/sage-global-solutions/subgrouplist" class="external" target="_blank" title="Your place to get product support from other customers and Sage experts" alt="Your place to get product support from other customers and Sage experts">Product support community</a>
                                                </p>
                                            </div>
                                            <div class="small-6 medium-3 columns">
                                                <h5>Page info</h5>
                                                <p>Date published: <span class="mc-variable Dates.DateProjectBuilt variable">17 November 2023</span></p>
                                                <!-- script moves last published date to here -->
                                                <div id="last-published-footer">
                                                </div>
                                            </div>
                                            <div class="small-6 medium-3 columns">
                                                <h5><a href="https://www.sage.com" target="_blank" alt="Sage" title="Sage"><img class="sage-logo" src="../../../Resources/Images/Sage_logo_green.svg" alt="Sage" /></a>
                                                </h5>
                                                <p><a href="https://www.facebook.com/Sage/" target="_blank" alt="Facebook" title="Facebook"><i class="fa fa-lg fa-facebook" aria-hidden="true"></i></a>&#160;
						<a href="https://www.linkedin.com/company/sage-software" target="_blank" alt="LinkedIn" title="LinkedIn"><i class="fa fa-lg fa-linkedin" aria-hidden="true"></i></a>&#160;
						<a href="https://twitter.com/sagegroupplc/" target="_blank" alt="Twitter" title="Twitter"><i class="fa fa-lg fa-twitter" aria-hidden="true"></i></a>&#160;
						<a href="https://www.youtube.com/sage/ " target="_blank" alt="YouTube" title="YouTube"><i class="fa fa-lg fa-youtube" aria-hidden="true"></i></a></p>
                                                <p style="display: none;"><a href="../../../Resources/MasterPages/SearchResults_X3.htm"> </a>
                                                </p>
                                            </div>
                                        </div>
                                    </section>
                                    <!-- Skin type scripts -->
                                    <script type="text/javascript" src="../../../Resources/Scripts/TopNav-template.js" data-mc-conditions="Other.HTML5-TopNav">
                                    </script>
                                    <!-- Page TOC -->
                                    <script type="text/javascript" src="../../../Resources/Scripts/TopNav-page-toc.js">
                                    </script>
                                    <!-- Business size -->
                                    <script type="text/javascript" src="../../../Resources/Scripts/Business-Medium.js" data-mc-conditions="Other.Business-Medium">
                                    </script>
                                    <!-- Google Analytics -->
                                    <div data-mc-conditions="Other.Production only">
                                        <!-- Google analytics script -->
                                        <!-- Copy and paste full HTML of tracking code here for Global site tag (gtag.js) -->
                                        <!-- Remember to edit 'async' parameter to read async="" -->
                                        <!-- Analytics for events -->
                                        <script type="text/javascript" src="../../../Resources/Scripts/google-analytics-events.js">
                                        </script>
                                    </div>
                                    <!-- cookies -->
                                    <script src="../../../Resources/Scripts/jquery.cookiesdirective.sage_X3.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/jquery.cookiesdirective.sage.config.js">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>